# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven and Deploy

on:
  push:
    branches: 
      - develop
  pull_request:
    branches: 
      - develop

env:
  S3_BUCKET_NAME: fp-ml
  RESOURCE_PATH: ./src/main/resources/application.yaml
  CODE_DEPLOY_APPLICATION_NAME: fp-ml-code-deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: fp-ml-server

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14' # Adjust the Node.js version if necessary

      - name: Install npm dependencies
        run: npm install
        working-directory: DE30-final-4/fp_ml_web/src/main/front

      - name: Check installed npm packages
        run: ls -R node_modules
        working-directory: DE30-final-4/fp_ml_web/src/main/front

      - name: Run npm build
        run: npm run build
        working-directory: DE30-final-4/fp_ml_web/src/main/front

      - name: Build with Maven
        run: mvn -B package --file /fp_ml_web/pom.xml

      - name: List target directory contents for debug
        run: ls -R /fp_ml_web/target

      - name: Set yaml file 
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }}
        env:
          override.value: ${{ secrets.DI_FROM_SECRET }}

      - name: Create zip file
        run: zip -r ./$GITHUB_SHA.zip DE30-final-4/fp_ml_web/target/
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

      - name: Create CodeDeploy deployment
        run: | 
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip

      # Optional: Update dependency graph
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
